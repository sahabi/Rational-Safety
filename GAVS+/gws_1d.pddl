(define (domain gws_1d) 
 	 (:requirements :strips :conditional-effects :negative-preconditions :disjunctive-preconditions) 
 	 (:constants s0 e0 s1 e1 s2 e2 s3 e3 s4 e4 s5 e5 s6 e6 s7 e7 s8 e8 s9 e9 s10 e10 ) 
 	 (:predicates (robot_S_position ?x) (robot_E_position ?x) (P0TRAN) )
 	 (:action move_S_robot_left 
 	 :parameters () 
 	 :precondition (and (P0TRAN) 
 	 	 (or(robot_S_position s1)(robot_S_position s2)(robot_S_position s3)(robot_S_position s4)(robot_S_position s5)(robot_S_position s6)(robot_S_position s7)(robot_S_position s8)(robot_S_position s9)(robot_S_position s10)))
 	 :effect (and	 	 (when (robot_S_position s1) (and (not (P0TRAN)) (robot_S_position s0 )  (not (robot_S_position s1 )) ))	 	 (when (robot_S_position s2) (and (not (P0TRAN)) (robot_S_position s1 )  (not (robot_S_position s2 )) ))	 	 (when (robot_S_position s3) (and (not (P0TRAN)) (robot_S_position s2 )  (not (robot_S_position s3 )) ))	 	 (when (robot_S_position s4) (and (not (P0TRAN)) (robot_S_position s3 )  (not (robot_S_position s4 )) ))	 	 (when (robot_S_position s5) (and (not (P0TRAN)) (robot_S_position s4 )  (not (robot_S_position s5 )) ))	 	 (when (robot_S_position s6) (and (not (P0TRAN)) (robot_S_position s5 )  (not (robot_S_position s6 )) ))	 	 (when (robot_S_position s7) (and (not (P0TRAN)) (robot_S_position s6 )  (not (robot_S_position s7 )) ))	 	 (when (robot_S_position s8) (and (not (P0TRAN)) (robot_S_position s7 )  (not (robot_S_position s8 )) ))	 	 (when (robot_S_position s9) (and (not (P0TRAN)) (robot_S_position s8 )  (not (robot_S_position s9 )) ))	 	 (when (robot_S_position s10) (and (not (P0TRAN)) (robot_S_position s9 )  (not (robot_S_position s10 )) )))
) 
 	 (:action move_S_robot_right 
 	 :parameters () 
 	 :precondition (and (P0TRAN) 
 	 	 (or(robot_S_position s0)(robot_S_position s1)(robot_S_position s2)(robot_S_position s3)(robot_S_position s4)(robot_S_position s5)(robot_S_position s6)(robot_S_position s7)(robot_S_position s8)(robot_S_position s9)))
 	 :effect (and	 	 (when (robot_S_position s0) (and (not (P0TRAN)) (robot_S_position s1 )  (not (robot_S_position s0 )) ))	 	 (when (robot_S_position s1) (and (not (P0TRAN)) (robot_S_position s2 )  (not (robot_S_position s1 )) ))	 	 (when (robot_S_position s2) (and (not (P0TRAN)) (robot_S_position s3 )  (not (robot_S_position s2 )) ))	 	 (when (robot_S_position s3) (and (not (P0TRAN)) (robot_S_position s4 )  (not (robot_S_position s3 )) ))	 	 (when (robot_S_position s4) (and (not (P0TRAN)) (robot_S_position s5 )  (not (robot_S_position s4 )) ))	 	 (when (robot_S_position s5) (and (not (P0TRAN)) (robot_S_position s6 )  (not (robot_S_position s5 )) ))	 	 (when (robot_S_position s6) (and (not (P0TRAN)) (robot_S_position s7 )  (not (robot_S_position s6 )) ))	 	 (when (robot_S_position s7) (and (not (P0TRAN)) (robot_S_position s8 )  (not (robot_S_position s7 )) ))	 	 (when (robot_S_position s8) (and (not (P0TRAN)) (robot_S_position s9 )  (not (robot_S_position s8 )) ))	 	 (when (robot_S_position s9) (and (not (P0TRAN)) (robot_S_position s10 )  (not (robot_S_position s9 )) )))
) 	 (:action move_S_robot_stay 
 	 :parameters () 
 	 :precondition (and (P0TRAN) 
 	 	 (or(robot_S_position s0)(robot_S_position s1)(robot_S_position s2)(robot_S_position s3)(robot_S_position s4)(robot_S_position s5)(robot_S_position s6)(robot_S_position s7)(robot_S_position s8)(robot_S_position s9)(robot_S_position s10)))
 	 :effect (and	 	 (when (robot_S_position s0) (and (not (P0TRAN)) (robot_S_position s0 ) ))	 	 (when (robot_S_position s1) (and (not (P0TRAN)) (robot_S_position s1 ) ))	 	 (when (robot_S_position s2) (and (not (P0TRAN)) (robot_S_position s2 ) ))	 	 (when (robot_S_position s3) (and (not (P0TRAN)) (robot_S_position s3 ) ))	 	 (when (robot_S_position s4) (and (not (P0TRAN)) (robot_S_position s4 ) ))	 	 (when (robot_S_position s5) (and (not (P0TRAN)) (robot_S_position s5 ) ))	 	 (when (robot_S_position s6) (and (not (P0TRAN)) (robot_S_position s6 ) ))	 	 (when (robot_S_position s7) (and (not (P0TRAN)) (robot_S_position s7 ) ))	 	 (when (robot_S_position s8) (and (not (P0TRAN)) (robot_S_position s8 ) ))	 	 (when (robot_S_position s9) (and (not (P0TRAN)) (robot_S_position s9 ) ))	 	 (when (robot_S_position s10) (and (not (P0TRAN)) (robot_S_position s10 ) )))
) 
 	 (:action move_E_robot_right 
 	 :parameters () 
 	 :precondition (and (not (P0TRAN)) 
 	 	 (or(robot_E_position e0)(robot_E_position e1)(robot_E_position e2)(robot_E_position e3)(robot_E_position e4)(robot_E_position e5)(robot_E_position e6)(robot_E_position e7)(robot_E_position e8)(robot_E_position e9)))
 	 :effect (and	 	 (when (robot_E_position e0) (and (P0TRAN) (robot_E_position e1 )  (not (robot_E_position e0 )) ))	 	 (when (robot_E_position e1) (and (P0TRAN) (robot_E_position e2 )  (not (robot_E_position e1 )) ))	 	 (when (robot_E_position e2) (and (P0TRAN) (robot_E_position e3 )  (not (robot_E_position e2 )) ))	 	 (when (robot_E_position e3) (and (P0TRAN) (robot_E_position e4 )  (not (robot_E_position e3 )) ))	 	 (when (robot_E_position e4) (and (P0TRAN) (robot_E_position e5 )  (not (robot_E_position e4 )) ))	 	 (when (robot_E_position e5) (and (P0TRAN) (robot_E_position e6 )  (not (robot_E_position e5 )) ))	 	 (when (robot_E_position e6) (and (P0TRAN) (robot_E_position e7 )  (not (robot_E_position e6 )) ))	 	 (when (robot_E_position e7) (and (P0TRAN) (robot_E_position e8 )  (not (robot_E_position e7 )) ))	 	 (when (robot_E_position e8) (and (P0TRAN) (robot_E_position e9 )  (not (robot_E_position e8 )) ))	 	 (when (robot_E_position e9) (and (P0TRAN) (robot_E_position e10 )  (not (robot_E_position e9 )) )))
) 
 	 (:action move_E_robot_stay 
 	 :parameters () 
 	 :precondition (and (not (P0TRAN)) 
 	 	 (or(robot_E_position e0)(robot_E_position e1)(robot_E_position e2)(robot_E_position e3)(robot_E_position e4)(robot_E_position e5)(robot_E_position e6)(robot_E_position e7)(robot_E_position e8)(robot_E_position e9)(robot_E_position e10)))
 	 :effect (and	 	 (when (robot_E_position e0) (and (P0TRAN) (robot_E_position e0 ) ))	 	 (when (robot_E_position e1) (and (P0TRAN) (robot_E_position e1 ) ))	 	 (when (robot_E_position e2) (and (P0TRAN) (robot_E_position e2 ) ))	 	 (when (robot_E_position e3) (and (P0TRAN) (robot_E_position e3 ) ))	 	 (when (robot_E_position e4) (and (P0TRAN) (robot_E_position e4 ) ))	 	 (when (robot_E_position e5) (and (P0TRAN) (robot_E_position e5 ) ))	 	 (when (robot_E_position e6) (and (P0TRAN) (robot_E_position e6 ) ))	 	 (when (robot_E_position e7) (and (P0TRAN) (robot_E_position e7 ) ))	 	 (when (robot_E_position e8) (and (P0TRAN) (robot_E_position e8 ) ))	 	 (when (robot_E_position e9) (and (P0TRAN) (robot_E_position e9 ) ))	 	 (when (robot_E_position e10) (and (P0TRAN) (robot_E_position e10 ) )))
) 
 	 (:action move_E_robot_left 
 	 :parameters () 
 	 :precondition (and (not (P0TRAN)) 
 	 	 (or(robot_E_position e1)(robot_E_position e2)(robot_E_position e3)(robot_E_position e4)(robot_E_position e5)(robot_E_position e6)(robot_E_position e7)(robot_E_position e8)(robot_E_position e9)(robot_E_position e10)))
 	 :effect (and	 	 (when (robot_E_position e1) (and (P0TRAN) (robot_E_position e0 )  (not (robot_E_position e1 )) ))	 	 (when (robot_E_position e2) (and (P0TRAN) (robot_E_position e1 )  (not (robot_E_position e2 )) ))	 	 (when (robot_E_position e3) (and (P0TRAN) (robot_E_position e2 )  (not (robot_E_position e3 )) ))	 	 (when (robot_E_position e4) (and (P0TRAN) (robot_E_position e3 )  (not (robot_E_position e4 )) ))	 	 (when (robot_E_position e5) (and (P0TRAN) (robot_E_position e4 )  (not (robot_E_position e5 )) ))	 	 (when (robot_E_position e6) (and (P0TRAN) (robot_E_position e5 )  (not (robot_E_position e6 )) ))	 	 (when (robot_E_position e7) (and (P0TRAN) (robot_E_position e6 )  (not (robot_E_position e7 )) ))	 	 (when (robot_E_position e8) (and (P0TRAN) (robot_E_position e7 )  (not (robot_E_position e8 )) ))	 	 (when (robot_E_position e9) (and (P0TRAN) (robot_E_position e8 )  (not (robot_E_position e9 )) ))	 	 (when (robot_E_position e10) (and (P0TRAN) (robot_E_position e9 )  (not (robot_E_position e10 )) )))
) 
)
(define (domain modified_fmcad) 
 	 (:requirements :strips :conditional-effects :negative-preconditions :disjunctive-preconditions) 
 	 (:constants s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 ) 
 	 (:predicates (robot_position ?x) (P0TRAN) )
 	 (:action move_S_robot_left 
 	 :parameters () 
 	 :precondition (and (P0TRAN) 
 	 	 (or(robot_position s1)(robot_position s2)(robot_position s3)(robot_position s4)(robot_position s5)))
 	 :effect (and	 	 (when (robot_position s1) (and (not (P0TRAN)) (robot_position s0 )  (not (robot_position s1 )) ))	 	 (when (robot_position s2) (and (not (P0TRAN)) (robot_position s1 )  (not (robot_position s2 )) ))	 	 (when (robot_position s3) (and (not (P0TRAN)) (robot_position s2 )  (not (robot_position s3 )) ))	 	 (when (robot_position s4) (and (not (P0TRAN)) (robot_position s3 )  (not (robot_position s4 )) ))	 	 (when (robot_position s5) (and (not (P0TRAN)) (robot_position s4 )  (not (robot_position s5 )) )))
) 
 	 (:action move_S_robot_right 
 	 :parameters () 
 	 :precondition (and (P0TRAN) 
 	 	 (or(robot_position s6)(robot_position s7)(robot_position s8)(robot_position s9)(robot_position s10)(robot_position s11)))
 	 :effect (and	 	 (when (robot_position s6) (and (not (P0TRAN)) (robot_position s7 )  (not (robot_position s6 )) ))	 	 (when (robot_position s7) (and (not (P0TRAN)) (robot_position s8 )  (not (robot_position s7 )) ))	 	 (when (robot_position s8) (and (not (P0TRAN)) (robot_position s9 )  (not (robot_position s8 )) ))	 	 (when (robot_position s9) (and (not (P0TRAN)) (robot_position s10 )  (not (robot_position s9 )) ))	 	 (when (robot_position s10) (and (not (P0TRAN)) (robot_position s11 )  (not (robot_position s10 )) ))	 	 (when (robot_position s11) (and (not (P0TRAN)) (robot_position s12 )  (not (robot_position s11 )) )))
) 	 (:action move_S_robot_stay 
 	 :parameters () 
 	 :precondition (and (P0TRAN) 
 	 	 (or(robot_position s0)(robot_position s1)(robot_position s2)(robot_position s3)(robot_position s4)(robot_position s5)(robot_position s6)(robot_position s7)(robot_position s8)(robot_position s9)(robot_position s10)(robot_position s11)(robot_position s12)))
 	 :effect (and	 	 (when (robot_position s0) (and (not (P0TRAN)) (robot_position s0 ) ))	 	 (when (robot_position s1) (and (not (P0TRAN)) (robot_position s1 ) ))	 	 (when (robot_position s2) (and (not (P0TRAN)) (robot_position s2 ) ))	 	 (when (robot_position s3) (and (not (P0TRAN)) (robot_position s3 ) ))	 	 (when (robot_position s4) (and (not (P0TRAN)) (robot_position s4 ) ))	 	 (when (robot_position s5) (and (not (P0TRAN)) (robot_position s5 ) ))	 	 (when (robot_position s6) (and (not (P0TRAN)) (robot_position s6 ) ))	 	 (when (robot_position s7) (and (not (P0TRAN)) (robot_position s7 ) ))	 	 (when (robot_position s8) (and (not (P0TRAN)) (robot_position s8 ) ))	 	 (when (robot_position s9) (and (not (P0TRAN)) (robot_position s9 ) ))	 	 (when (robot_position s10) (and (not (P0TRAN)) (robot_position s10 ) ))	 	 (when (robot_position s11) (and (not (P0TRAN)) (robot_position s11 ) ))	 	 (when (robot_position s12) (and (not (P0TRAN)) (robot_position s12 ) )))
) 
 	 (:action move_E_robot_right 
 	 :parameters () 
 	 :precondition (and (not (P0TRAN)) 
 	 	 (or(robot_position s0)(robot_position s1)(robot_position s2)(robot_position s3)(robot_position s4)(robot_position s5)(robot_position s6)(robot_position s7)(robot_position s8)(robot_position s9)(robot_position s10)(robot_position s11)))
 	 :effect (and	 	 (when (robot_position s0) (and (P0TRAN) (robot_position s1 )  (not (robot_position s0 )) ))	 	 (when (robot_position s1) (and (P0TRAN) (robot_position s2 )  (not (robot_position s1 )) ))	 	 (when (robot_position s2) (and (P0TRAN) (robot_position s3 )  (not (robot_position s2 )) ))	 	 (when (robot_position s3) (and (P0TRAN) (robot_position s4 )  (not (robot_position s3 )) ))	 	 (when (robot_position s4) (and (P0TRAN) (robot_position s5 )  (not (robot_position s4 )) ))	 	 (when (robot_position s5) (and (P0TRAN) (robot_position s6 )  (not (robot_position s5 )) ))	 	 (when (robot_position s6) (and (P0TRAN) (robot_position s7 )  (not (robot_position s6 )) ))	 	 (when (robot_position s7) (and (P0TRAN) (robot_position s8 )  (not (robot_position s7 )) ))	 	 (when (robot_position s8) (and (P0TRAN) (robot_position s9 )  (not (robot_position s8 )) ))	 	 (when (robot_position s9) (and (P0TRAN) (robot_position s10 )  (not (robot_position s9 )) ))	 	 (when (robot_position s10) (and (P0TRAN) (robot_position s11 )  (not (robot_position s10 )) ))	 	 (when (robot_position s11) (and (P0TRAN) (robot_position s12 )  (not (robot_position s11 )) )))
) 
 	 (:action move_E_robot_stay 
 	 :parameters () 
 	 :precondition (and (not (P0TRAN)) 
 	 	 (or(robot_position s0)(robot_position s1)(robot_position s2)(robot_position s3)(robot_position s4)(robot_position s5)(robot_position s6)(robot_position s7)(robot_position s8)(robot_position s9)(robot_position s10)(robot_position s11)(robot_position s12)))
 	 :effect (and	 	 (when (robot_position s0) (and (P0TRAN) (robot_position s0 ) ))	 	 (when (robot_position s1) (and (P0TRAN) (robot_position s1 ) ))	 	 (when (robot_position s2) (and (P0TRAN) (robot_position s2 ) ))	 	 (when (robot_position s3) (and (P0TRAN) (robot_position s3 ) ))	 	 (when (robot_position s4) (and (P0TRAN) (robot_position s4 ) ))	 	 (when (robot_position s5) (and (P0TRAN) (robot_position s5 ) ))	 	 (when (robot_position s6) (and (P0TRAN) (robot_position s6 ) ))	 	 (when (robot_position s7) (and (P0TRAN) (robot_position s7 ) ))	 	 (when (robot_position s8) (and (P0TRAN) (robot_position s8 ) ))	 	 (when (robot_position s9) (and (P0TRAN) (robot_position s9 ) ))	 	 (when (robot_position s10) (and (P0TRAN) (robot_position s10 ) ))	 	 (when (robot_position s11) (and (P0TRAN) (robot_position s11 ) ))	 	 (when (robot_position s12) (and (P0TRAN) (robot_position s12 ) )))
) 
)